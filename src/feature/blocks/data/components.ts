export const components = [
  {
    "component": "Hero1",
    "slug": "hero1",
    "code": [
      {
        "fileName": "hero1.tsx",
        "language": "tsx",
        "code": "import { Container, Title, Text, Button, Group, Stack, Grid, ThemeIcon, Box, Paper, rgba } from \"@mantine/core\";\r\nimport { GitHubLogoIcon, RocketIcon, LightningBoltIcon, StarIcon, DashboardIcon } from \"@radix-ui/react-icons\";\r\nimport classes from \"./hero1.module.css\";\r\n\r\nexport const Hero1 = () => {\r\n  const features = [\r\n    { icon: <LightningBoltIcon />, label: \"Lightning Fast\" },\r\n    { icon: <StarIcon />, label: \"Production Ready\" },\r\n    { icon: <DashboardIcon />, label: \"Modern Design\" },\r\n  ];\r\n\r\n  return (\r\n    <Box>\r\n      <Container size=\"xl\" py={120}>\r\n        <Grid gutter={40} align=\"center\">\r\n          <Grid.Col span={{ base: 12, md: 7 }}>\r\n            <Stack gap=\"xl\">\r\n              <Group gap={\"xs\"}>\r\n                <ThemeIcon size=\"lg\" radius=\"md\" variant=\"transparent\">\r\n                  <RocketIcon style={{ width: 20, height: 20 }} color=\"var(--mantine-primary-color-filled)\" />\r\n                </ThemeIcon>\r\n                <Text fw={500} size=\"sm\" style={{ letterSpacing: 1 }} tt=\"uppercase\">\r\n                  Launch Your Project Today\r\n                </Text>\r\n              </Group>\r\n\r\n              <Title className={classes?.title} order={1} size=\"h1\">\r\n                Build Faster, Scale Better with Our Platform\r\n              </Title>\r\n\r\n              <Text size=\"xl\" c=\"dimmed\" maw={600}>\r\n                Experience the next generation of web development. Build scalable applications with modern tools and\r\n                frameworks.\r\n              </Text>\r\n\r\n              <Group mt=\"xl\">\r\n                <Button size=\"lg\" leftSection={<RocketIcon />}>\r\n                  Get Started\r\n                </Button>\r\n                <Button size=\"lg\" variant=\"default\" leftSection={<GitHubLogoIcon />}>\r\n                  View on GitHub\r\n                </Button>\r\n              </Group>\r\n\r\n              <Group mt={30} gap=\"xl\">\r\n                {features.map((feature, index) => (\r\n                  <Group key={index} gap=\"xs\">\r\n                    <ThemeIcon\r\n                      size=\"md\"\r\n                      variant=\"light\"\r\n                      color=\"blue\"\r\n                      style={{ background: rgba(\"var(--mantine-primary-color-filled)\", 0.07) }}\r\n                    >\r\n                      {feature.icon}\r\n                    </ThemeIcon>\r\n                    <Text size=\"sm\" c=\"dimmed\">\r\n                      {feature.label}\r\n                    </Text>\r\n                  </Group>\r\n                ))}\r\n              </Group>\r\n            </Stack>\r\n          </Grid.Col>\r\n\r\n          <Grid.Col span={{ base: 12, md: 5 }}>\r\n            <Paper\r\n              mih={320}\r\n              radius=\"md\"\r\n              p=\"xl\"\r\n              bg={\"rgba(255, 255, 255, 0.1)\"}\r\n              bd={\" 1px solid rgba(255, 255, 255, 0.1) \"}\r\n            ></Paper>\r\n          </Grid.Col>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n"
      },
      {
        "fileName": "hero1.module.css",
        "language": "scss",
        "code": ".title {\r\n  font-size: clamp(2.5rem, 5vw, 4rem);\r\n  line-height: 1;\r\n  background: linear-gradient(80deg, var(--mantine-primary-color-filled), var(--mantine-primary-color-8));\r\n\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n\r\n.themeIconBackground {\r\n  background: rgba(var(--mantine-primary-color-filled), 0.07);\r\n}\r\n"
      }
    ],
    "attributes": {
      "title": "hero1",
      "category": "hero",
      "canvas": {
        "center": true,
        "maxWidth": 1200
      },
      "order": 1
    }
  },
  {
    "component": "Feature1",
    "slug": "feature1",
    "code": [
      {
        "fileName": "feature1.tsx",
        "language": "tsx",
        "code": "import { Grid, Card, Text, Title, Center, Box, Stack } from \"@mantine/core\";\r\nimport { ZoomInIcon, BarChartIcon, CircleIcon, HandIcon, LayersIcon, BellIcon } from \"@radix-ui/react-icons\";\r\nimport classes from \"./feature1.module.css\";\r\n\r\nconst reasons = [\r\n  {\r\n    title: \"Quality\",\r\n    description: \"We deliver exceptional results that exceed expectations, setting new standards in the industry.\",\r\n    icon: <ZoomInIcon />,\r\n  },\r\n  {\r\n    title: \"Experience\",\r\n    description: \"Decades of combined expertise ensures your project is handled with professional excellence.\",\r\n    icon: <BarChartIcon />,\r\n  },\r\n  {\r\n    title: \"Support\",\r\n    description: \"24/7 dedicated support team ready to assist you with any questions or concerns.\",\r\n    icon: <CircleIcon />,\r\n  },\r\n  {\r\n    title: \"Innovation\",\r\n    description: \"Cutting-edge solutions that keep you ahead of the curve in today's dynamic market.\",\r\n    icon: <HandIcon />,\r\n  },\r\n  {\r\n    title: \"Results\",\r\n    description: \"Proven track record of delivering measurable outcomes and tangible business value.\",\r\n    icon: <LayersIcon />,\r\n  },\r\n  {\r\n    title: \"Efficiency\",\r\n    description: \"Streamlined processes that save time and resources while maximizing productivity.\",\r\n    icon: <BellIcon />,\r\n  },\r\n];\r\n\r\nexport const Feature1 = () => {\r\n  return (\r\n    <Box py={120} className={classes.wrapper}>\r\n      <Box px=\"md\" mx=\"auto\" maw={1200}>\r\n        <Stack gap={60}>\r\n          <Box>\r\n            <Title className={classes.title} order={2} ta=\"center\" size={40} fw={800}>\r\n              Why Work With Us?\r\n            </Title>\r\n            <Text c=\"dimmed\" ta=\"center\" size=\"lg\" maw={600} mx=\"auto\" mt=\"md\">\r\n              Discover the unique advantages that set us apart and make us your ideal partner for success\r\n            </Text>\r\n          </Box>\r\n\r\n          <Grid gutter={40}>\r\n            {reasons.map((reason, i) => (\r\n              <Grid.Col key={i} span={{ base: 12, md: 6, lg: 4 }}>\r\n                <Card className={classes.card} p={30} radius=\"md\" withBorder>\r\n                  <Stack gap=\"lg\">\r\n                    <Center>\r\n                      <Box className={classes.iconWrapper}>{reason.icon}</Box>\r\n                    </Center>\r\n                    <Stack gap=\"sm\">\r\n                      <Text className={classes.cardTitle}>{reason.title}</Text>\r\n                      <Text size=\"md\" c=\"dimmed\" lh={1.6}>\r\n                        {reason.description}\r\n                      </Text>\r\n                    </Stack>\r\n                  </Stack>\r\n                </Card>\r\n              </Grid.Col>\r\n            ))}\r\n          </Grid>\r\n        </Stack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n"
      },
      {
        "fileName": "feature1.module.css",
        "language": "scss",
        "code": ".wrapper {\r\n  position: relative;\r\n}\r\n\r\n.title {\r\n  position: relative;\r\n  font-weight: 900;\r\n  background: linear-gradient(180deg, var(--mantine-primary-color-filled), var(--mantine-primary-color-8));\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n\r\n.title::after {\r\n  content: \"\";\r\n  display: block;\r\n  width: 60px;\r\n  height: 4px;\r\n  background: linear-gradient(45deg, var(--mantine-primary-color-5), var(--mantine-primary-color-2));\r\n  margin: 20px auto;\r\n  border-radius: var(--mantine-radius-xl);\r\n}\r\n\r\n.card {\r\n  transition: all 0.1s ease;\r\n}\r\n\r\n.card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: var(--mantine-shadow-lg);\r\n  background: var(--mantine-color-secondary-filled);\r\n}\r\n\r\n.iconWrapper {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: var(--mantine-radius-md);\r\n  /* background: linear-gradient(45deg, var(--mantine-primary-color-6), var(--mantine-primary-color-5)); */\r\n  background: var(--mantine-primary-color-filled-hover);\r\n  color: var(--mantine-primary-color-contrast);\r\n  animation: float 3s ease-in-out infinite;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.iconWrapper svg {\r\n  width: 24px;\r\n  height: 24px;\r\n}\r\n\r\n.cardTitle {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n}\r\n\r\n@keyframes float {\r\n  0% {\r\n    transform: translateY(0);\r\n  }\r\n  50% {\r\n    transform: translateY(-10px);\r\n  }\r\n  100% {\r\n    transform: translateY(0);\r\n  }\r\n}\r\n"
      }
    ],
    "attributes": {
      "title": "feature1",
      "category": "feature",
      "canvas": {
        "center": true,
        "maxWidth": 1200
      },
      "order": 2
    }
  },
  {
    "component": "Hero2",
    "slug": "hero2",
    "code": [
      {
        "fileName": "hero2.tsx",
        "language": "tsx",
        "code": "\r\nimport { Container, Title, Text, Button, ThemeIcon, Box, Group, Paper, Code } from \"@mantine/core\";\r\nimport {\r\n  ArrowRightIcon,\r\n  GitHubLogoIcon,\r\n  LightningBoltIcon,\r\n  BellIcon,\r\n  LayoutIcon,\r\n  CodeIcon,\r\n  GlobeIcon,\r\n} from \"@radix-ui/react-icons\";\r\nimport classes from \"./hero2.module.css\";\r\n\r\nexport const Hero2 = () => {\r\n  return (\r\n    <Box className={classes.heroWrapper}>\r\n      <Container size=\"xl\" py={80}>\r\n        <Box>\r\n          {/* Content Column */}\r\n          <Box className={classes.contentColumn}>\r\n            <Title className={classes.mainTitle}>\r\n              <span className={classes.titleLine}>\r\n                Transform your <span className={classes.accent}>workflow</span>\r\n              </span>\r\n            </Title>\r\n\r\n            <Text size=\"lg\" c=\"dimmed\" className={classes.description}>\r\n              Build scalable applications with a powerful toolkit that combines developer experience with\r\n              production-grade infrastructure.\r\n            </Text>\r\n\r\n            {/* Stats */}\r\n            <Box className={classes.statsContainer}>\r\n              <Box className={classes.statItem}>\r\n                <Text className={classes.statValue}>10x</Text>\r\n                <Text size=\"sm\" c=\"dimmed\">\r\n                  Faster Deployment\r\n                </Text>\r\n              </Box>\r\n              <Box className={classes.divider} />\r\n              <Box className={classes.statItem}>\r\n                <Text className={classes.statValue}>2.5k+</Text>\r\n                <Text size=\"sm\" c=\"dimmed\">\r\n                  Active Developers\r\n                </Text>\r\n              </Box>\r\n              <Box className={classes.divider} />\r\n              <Box className={classes.statItem}>\r\n                <Text className={classes.statValue}>99.9%</Text>\r\n                <Text size=\"sm\" c=\"dimmed\">\r\n                  Uptime Guarantee\r\n                </Text>\r\n              </Box>\r\n            </Box>\r\n\r\n            {/* Buttons */}\r\n            <Group className={classes.buttonContainer}>\r\n              <Button\r\n                radius=\"xl\"\r\n                size=\"lg\"\r\n                rightSection={<ArrowRightIcon style={{ width: 16, height: 16 }} />}\r\n                className={classes.primaryBtn}\r\n              >\r\n                Get Started Now\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"outline\"\r\n                radius=\"xl\"\r\n                size=\"lg\"\r\n                leftSection={<GitHubLogoIcon style={{ width: 16, height: 16 }} />}\r\n                className={classes.secondaryBtn}\r\n              >\r\n                View Source\r\n              </Button>\r\n            </Group>\r\n          </Box>\r\n\r\n          {/* Visual Column */}\r\n          <Box className={classes.visualColumn}>\r\n            {/* Feature Pills */}\r\n            <Paper shadow=\"sm\" p=\"xs\" radius=\"xl\" className={classes.featurePill} style={{ top: \"15%\", left: \"10%\" }}>\r\n              <Group gap=\"xs\">\r\n                <ThemeIcon radius=\"xl\" size=\"md\" color=\"violet\">\r\n                  <LightningBoltIcon />\r\n                </ThemeIcon>\r\n                <Text size=\"sm\" fw={500}>\r\n                  High Performance\r\n                </Text>\r\n              </Group>\r\n            </Paper>\r\n\r\n            <Paper\r\n              shadow=\"sm\"\r\n              p=\"xs\"\r\n              radius=\"xl\"\r\n              className={classes.featurePill}\r\n              style={{ bottom: \"5%\", right: \"12%\" }}\r\n            >\r\n              <Group gap=\"xs\">\r\n                <ThemeIcon radius=\"xl\" size=\"md\" color=\"green\">\r\n                  <LayoutIcon />\r\n                </ThemeIcon>\r\n                <Text size=\"sm\" fw={500}>\r\n                  Responsive UI\r\n                </Text>\r\n              </Group>\r\n            </Paper>\r\n\r\n            <Paper\r\n              shadow=\"sm\"\r\n              p=\"xs\"\r\n              radius=\"xl\"\r\n              className={classes.featurePill}\r\n              style={{ bottom: \"15%\", left: \"15%\" }}\r\n            >\r\n              <Group gap=\"xs\">\r\n                <ThemeIcon radius=\"xl\" size=\"md\" color=\"blue\">\r\n                  <GlobeIcon />\r\n                </ThemeIcon>\r\n                <Text size=\"sm\" fw={500}>\r\n                  Global CDN\r\n                </Text>\r\n              </Group>\r\n            </Paper>\r\n\r\n            {/* Main Visual */}\r\n            <Box className={classes.mainVisual}>\r\n              <Box className={classes.codeWindow}>\r\n                <Group className={classes.codeHeader}>\r\n                  <Group className={classes.codeDots}>\r\n                    <Box className={classes.dotRed} />\r\n                    <Box className={classes.dotYellow} />\r\n                    <Box className={classes.dotGreen} />\r\n                  </Group>\r\n                  <Group className={classes.codeTabs}>\r\n                    <Text size=\"sm\" className={classes.activeTab}>\r\n                      main.jsx\r\n                    </Text>\r\n                    <Text size=\"sm\" c=\"gray.5\">\r\n                      config.js\r\n                    </Text>\r\n                  </Group>\r\n                </Group>\r\n\r\n                <Box className={classes.codeBody}>\r\n                  <Code block className={classes.codeSyntax}>\r\n                    {`import { createApp, injectFeatures } from 'platform';\r\nimport { analytics, router, store } from './plugins';\r\n\r\n// Initialize application\r\nconst app = createApp({\r\n  features: injectFeatures([\r\n    analytics(),\r\n    router(),\r\n    store({ hydration: true })\r\n  ]),\r\n  render: (state) => (\r\n    <Dashboard \r\n      data={state.data}\r\n      user={state.user}\r\n      theme=\"auto\"\r\n    />\r\n  )\r\n});\r\n\r\n// Launch your application\r\napp.launch('#root');`}\r\n                  </Code>\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Floating Cards */}\r\n              <Paper\r\n                shadow=\"md\"\r\n                p=\"xs\"\r\n                radius=\"md\"\r\n                className={classes.floatingCard}\r\n                style={{ top: \"-20px\", right: \"-20px\" }}\r\n              >\r\n                <Group gap=\"xs\">\r\n                  <CodeIcon color=\"var(--mantine-color-gray-6)\" />\r\n                  <Text size=\"xs\">Auto-optimizing</Text>\r\n                </Group>\r\n              </Paper>\r\n\r\n              <Paper\r\n                shadow=\"md\"\r\n                p=\"xs\"\r\n                radius=\"md\"\r\n                className={classes.floatingCard}\r\n                style={{ bottom: \"-25px\", left: \"30px\" }}\r\n              >\r\n                <Group gap=\"xs\">\r\n                  <BellIcon color=\"var(--mantine-color-yellow-6)\" />\r\n                  <Text size=\"xs\">Real-time updates</Text>\r\n                </Group>\r\n              </Paper>\r\n\r\n              <Box className={classes.glowEffect} />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n"
      },
      {
        "fileName": "hero2.module.css",
        "language": "scss",
        "code": ".heroWrapper {\r\n  position: relative;\r\n  overflow: hidden;\r\n  min-height: 100vh;\r\n  padding: 1rem 0;\r\n}\r\n\r\n.contentColumn {\r\n  position: relative;\r\n  z-index: 10;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.mainTitle {\r\n  font-size: 3.5rem;\r\n  line-height: 1.1;\r\n  font-weight: 800;\r\n  margin-bottom: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: var(--mantine-color-dark-8);\r\n}\r\n\r\n.titleLine {\r\n  background: linear-gradient(90deg, var(--mantine-primary-color-filled) 0%, var(--mantine-color-indigo-6) 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  display: block;\r\n}\r\n\r\n.accent {\r\n  background: linear-gradient(90deg, var(--mantine-primary-color-filled) 0%, var(--mantine-color-indigo-6) 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.description {\r\n  font-size: 1.25rem;\r\n  max-width: 640px;\r\n  margin-bottom: 1.5rem;\r\n  line-height: 1.6;\r\n}\r\n\r\n.statsContainer {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  padding: 20px 0;\r\n  margin-bottom: 0.3rem;\r\n}\r\n\r\n.statItem {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.statValue {\r\n  font-size: 2rem;\r\n  font-weight: 800;\r\n  background: linear-gradient(90deg, var(--mantine-primary-color-filled) 0%, var(--mantine-color-indigo-6) 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.divider {\r\n  width: 1px;\r\n  height: 40px;\r\n  background-color: var(--mantine-color-gray-3);\r\n}\r\n\r\n.buttonContainer {\r\n  gap: 1rem;\r\n  margin-bottom: 3rem;\r\n}\r\n\r\n.primaryBtn {\r\n  border: none;\r\n  box-shadow: 0 10px 25px -5px rgba(var(--mantine-primary-color-rgb), 0.3);\r\n  transition:\r\n    transform 0.2s,\r\n    box-shadow 0.2s;\r\n  background-color: var(--mantine-primary-color-filled);\r\n}\r\n\r\n.primaryBtn:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 15px 30px -5px rgba(var(--mantine-primary-color-rgb), 0.4);\r\n}\r\n\r\n.secondaryBtn {\r\n  border-color: rgba(var(--mantine-primary-color-rgb), 0.3);\r\n  color: var(--mantine-primary-color-filled);\r\n  transition:\r\n    transform 0.2s,\r\n    background-color 0.2s;\r\n}\r\n\r\n.secondaryBtn:hover {\r\n  transform: translateY(-3px);\r\n  background-color: rgba(var(--mantine-primary-color-rgb), 0.05);\r\n}\r\n\r\n.visualColumn {\r\n  position: relative;\r\n  z-index: 2;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.mainVisual {\r\n  position: relative;\r\n  max-width: 650px;\r\n  width: 100%;\r\n}\r\n\r\n.codeWindow {\r\n  background-color: var(--mantine-color-dark-8);\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  transform: perspective(1000px) rotateY(-5deg) rotateX(5deg);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.codeWindow:hover {\r\n  transform: perspective(1000px) rotateY(-2deg) rotateX(2deg);\r\n}\r\n\r\n.codeHeader {\r\n  background-color: var(--mantine-color-dark-9);\r\n  padding: 12px 16px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\r\n}\r\n\r\n.codeDots {\r\n  gap: 8px;\r\n}\r\n\r\n.dotRed,\r\n.dotYellow,\r\n.dotGreen {\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.dotRed {\r\n  background-color: var(--mantine-color-red-6);\r\n}\r\n\r\n.dotYellow {\r\n  background-color: var(--mantine-color-yellow-6);\r\n}\r\n\r\n.dotGreen {\r\n  background-color: var(--mantine-color-green-6);\r\n}\r\n\r\n.codeTabs {\r\n  gap: 16px;\r\n}\r\n\r\n.activeTab {\r\n  color: var(--mantine-color-gray-0);\r\n  font-weight: 500;\r\n  position: relative;\r\n}\r\n\r\n.activeTab::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  bottom: -12px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background-color: var(--mantine-primary-color-filled);\r\n}\r\n\r\n.codeBody {\r\n  padding: 20px;\r\n  overflow: auto;\r\n  max-height: 350px;\r\n}\r\n\r\n.codeSyntax {\r\n  margin: 0;\r\n  color: var(--mantine-color-gray-0);\r\n  font-family: \"Fira Code\", monospace;\r\n  font-size: 0.875rem;\r\n  line-height: 1.6;\r\n  background-color: transparent;\r\n}\r\n\r\n.featurePill {\r\n  position: absolute;\r\n  backdrop-filter: blur(10px);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  z-index: 20;\r\n  animation: float 5s ease-in-out infinite;\r\n}\r\n\r\n.floatingCard {\r\n  position: absolute;\r\n  color: var(--mantine-color-text);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  z-index: 20;\r\n  animation: float 6s ease-in-out infinite alternate;\r\n}\r\n\r\n.glowEffect {\r\n  position: absolute;\r\n  width: 250px;\r\n  height: 250px;\r\n  background: radial-gradient(\r\n    circle,\r\n    rgba(var(--mantine-primary-color-rgb), 0.3) 0%,\r\n    rgba(var(--mantine-primary-color-rgb), 0) 70%\r\n  );\r\n  border-radius: 50%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: -1;\r\n  filter: blur(30px);\r\n}\r\n\r\n@keyframes float {\r\n  0% {\r\n    transform: translateY(0);\r\n  }\r\n  50% {\r\n    transform: translateY(-10px);\r\n  }\r\n  100% {\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n@media (max-width: 992px) {\r\n  .mainTitle {\r\n    font-size: 3rem;\r\n  }\r\n\r\n  .featurePill {\r\n    display: none;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .mainTitle {\r\n    font-size: 2.5rem;\r\n  }\r\n\r\n  .buttonContainer {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .statsContainer {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .divider {\r\n    width: 100%;\r\n    height: 1px;\r\n    margin: 10px 0;\r\n  }\r\n\r\n  .codeWindow {\r\n    transform: none;\r\n  }\r\n}\r\n"
      }
    ],
    "attributes": {
      "title": "hero2",
      "category": "hero",
      "canvas": {
        "center": true,
        "maxWidth": 1200
      },
      "order": 2
    }
  },
  {
    "component": "Hero3",
    "slug": "hero3",
    "code": [
      {
        "fileName": "hero3.tsx",
        "language": "tsx",
        "code": "import { Container, Title, Text, Button, Group, Box } from \"@mantine/core\";\r\nimport styles from \"./hero3.module.css\";\r\n\r\nexport const Hero3 = () => {\r\n  return (\r\n    <Box className={styles.heroContainer}>\r\n      {/* Animated background elements */}\r\n      <div className={styles.gradientBackground}></div>\r\n      <div className={styles.gridOverlay}></div>\r\n\r\n      <div className={styles.particleContainer}>\r\n        {[...Array(30)].map((_, i) => (\r\n          <div\r\n            key={i}\r\n            className={styles.particle}\r\n            style={{\r\n              top: `${Math.random() * 100}%`,\r\n              left: `${Math.random() * 100}%`,\r\n              animationDelay: `${Math.random() * 5}s`,\r\n              animationDuration: `${5 + Math.random() * 10}s`,\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n\r\n      <Container size=\"xl\" className={styles.contentContainer}>\r\n        <div className={styles.contentWrapper}>\r\n          <div className={styles.leftColumn}>\r\n            <div className={styles.tagLine}>\r\n              <div className={styles.tag}>\r\n                <span className={styles.pulse}></span>\r\n                <Text size=\"sm\" className={styles.tagText}>\r\n                  NEXT GENERATION AI\r\n                </Text>\r\n              </div>\r\n            </div>\r\n\r\n            <Title className={styles.mainTitle}>\r\n              <span className={styles.titleLine}>Quantum Neural</span>\r\n              <span className={styles.titleLine}>\r\n                <span className={styles.highlight}>Intelligence</span> System\r\n              </span>\r\n            </Title>\r\n\r\n            <Text className={styles.description}>\r\n              Experience the convergence of quantum computing and neural networks, enabling unprecedented computational\r\n              power and problem-solving capabilities beyond classical limitations.\r\n            </Text>\r\n\r\n            <Group className={styles.buttonGroup}>\r\n              <Button className={styles.primaryButton}>\r\n                <span className={styles.buttonInner}>\r\n                  <span className={styles.buttonGlow}></span>\r\n                  <span className={styles.buttonText}>Explore Platform</span>\r\n                </span>\r\n              </Button>\r\n\r\n              <Button variant=\"outline\" className={styles.secondaryButton}>\r\n                Technical Documentation\r\n              </Button>\r\n            </Group>\r\n\r\n            <div className={styles.metricsContainer}>\r\n              <div className={styles.metric}>\r\n                <div className={styles.metricValue}>\r\n                  <span className={styles.metricNumber}>850</span>\r\n                  <span className={styles.metricUnit}>+</span>\r\n                </div>\r\n                <Text size=\"xs\" className={styles.metricLabel}>\r\n                  QUANTUM CORES\r\n                </Text>\r\n              </div>\r\n\r\n              <div className={styles.metric}>\r\n                <div className={styles.metricValue}>\r\n                  <span className={styles.metricNumber}>10</span>\r\n                  <span className={styles.metricUnit}>-15s</span>\r\n                </div>\r\n                <Text size=\"xs\" className={styles.metricLabel}>\r\n                  RESPONSE TIME\r\n                </Text>\r\n              </div>\r\n\r\n              <div className={styles.metric}>\r\n                <div className={styles.metricValue}>\r\n                  <span className={styles.metricNumber}>99.99</span>\r\n                  <span className={styles.metricUnit}>%</span>\r\n                </div>\r\n                <Text size=\"xs\" className={styles.metricLabel}>\r\n                  ACCURACY RATE\r\n                </Text>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.rightColumn}>\r\n            <div className={styles.visualElement}>\r\n              <div className={styles.hologramContainer}>\r\n                <div className={styles.hologramCore}>\r\n                  <div className={styles.coreInner}></div>\r\n                  <div className={styles.coreRing}></div>\r\n                  <div className={styles.corePulse}></div>\r\n                </div>\r\n\r\n                <div className={styles.orbitalRing1}></div>\r\n                <div className={styles.orbitalRing2}></div>\r\n\r\n                <div className={styles.dataPoint1}>\r\n                  <div className={styles.dataPointDot}></div>\r\n                  <div className={styles.dataPointLabel}>Neural Link</div>\r\n                </div>\r\n\r\n                <div className={styles.dataPoint2}>\r\n                  <div className={styles.dataPointDot}></div>\r\n                  <div className={styles.dataPointLabel}>Quantum Core</div>\r\n                </div>\r\n\r\n                <div className={styles.dataPoint3}>\r\n                  <div className={styles.dataPointDot}></div>\r\n                  <div className={styles.dataPointLabel}>Data Nexus</div>\r\n                </div>\r\n\r\n                <div className={styles.scanLines}></div>\r\n              </div>\r\n\r\n              <div className={styles.blueprint}>\r\n                <div className={styles.blueprintLines}></div>\r\n                <div className={styles.blueprintCircle}></div>\r\n                <div className={styles.blueprintGrid}></div>\r\n              </div>\r\n\r\n              <div className={styles.dataStream}>\r\n                {[...Array(20)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className={styles.dataLine}\r\n                    style={{\r\n                      top: `${i * 5}%`,\r\n                      left: `${Math.random() * 100}%`,\r\n                      width: `${Math.random() * 100 + 50}px`,\r\n                      animationDelay: `${Math.random() * 2}s`,\r\n                    }}\r\n                  ></div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.partnersSection}>\r\n          <Text className={styles.partnersTitle}>TRUSTED BY LEADING ORGANIZATIONS</Text>\r\n          <div className={styles.partnersLogos}>\r\n            {[...Array(5)].map((_, i) => (\r\n              <div key={i} className={styles.partnerLogo}>\r\n                <div className={styles.glowBorder}></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n"
      },
      {
        "fileName": "hero3.module.css",
        "language": "scss",
        "code": "/* futuristic-hero.module.css */\r\n.heroContainer {\r\n  position: relative;\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  background-color: #080b13;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  color: white;\r\n}\r\n\r\n.gradientBackground {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: radial-gradient(circle at 70% 30%, rgba(64, 85, 255, 0.2), transparent 60%),\r\n    radial-gradient(circle at 30% 70%, rgba(255, 65, 184, 0.2), transparent 60%);\r\n  z-index: 1;\r\n}\r\n\r\n.gridOverlay {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: linear-gradient(rgba(64, 85, 255, 0.1) 1px, transparent 1px),\r\n    linear-gradient(90deg, rgba(64, 85, 255, 0.1) 1px, transparent 1px);\r\n  background-size: 40px 40px;\r\n  z-index: 2;\r\n  opacity: 0.2;\r\n}\r\n\r\n.particleContainer {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 3;\r\n}\r\n\r\n.particle {\r\n  position: absolute;\r\n  width: 2px;\r\n  height: 2px;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  border-radius: 50%;\r\n  animation: floatParticle linear infinite;\r\n}\r\n\r\n@keyframes floatParticle {\r\n  0% {\r\n    transform: translateY(0) translateX(0);\r\n    opacity: 0;\r\n  }\r\n  20% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    transform: translateY(-100px) translateX(30px);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.contentContainer {\r\n  position: relative;\r\n  z-index: 10;\r\n  width: 100%;\r\n}\r\n\r\n.contentWrapper {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  gap: 40px;\r\n}\r\n\r\n.leftColumn {\r\n  flex: 1;\r\n  z-index: 20;\r\n}\r\n\r\n.tagLine {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.tag {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 8px 16px;\r\n  border-radius: 30px;\r\n  background: rgba(64, 85, 255, 0.15);\r\n  backdrop-filter: blur(5px);\r\n  border: 1px solid rgba(64, 85, 255, 0.3);\r\n}\r\n\r\n.pulse {\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background-color: #40dbff;\r\n  box-shadow: 0 0 8px #40dbff;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    transform: scale(0.95);\r\n    box-shadow: 0 0 0 0 rgba(64, 219, 255, 0.7);\r\n  }\r\n\r\n  70% {\r\n    transform: scale(1);\r\n    box-shadow: 0 0 0 10px rgba(64, 219, 255, 0);\r\n  }\r\n\r\n  100% {\r\n    transform: scale(0.95);\r\n    box-shadow: 0 0 0 0 rgba(64, 219, 255, 0);\r\n  }\r\n}\r\n\r\n.tagText {\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n  background: linear-gradient(90deg, #40dbff, #40a7ff);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.mainTitle {\r\n  font-size: 4rem;\r\n  line-height: 1.1;\r\n  font-weight: 800;\r\n  margin-bottom: 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: white;\r\n  position: relative;\r\n}\r\n\r\n.titleLine {\r\n  display: block;\r\n}\r\n\r\n.highlight {\r\n  position: relative;\r\n  background: linear-gradient(90deg, #40a7ff, #ff41b8);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.highlight::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 6px;\r\n  background: linear-gradient(90deg, #40a7ff, #ff41b8);\r\n  border-radius: 3px;\r\n  opacity: 0.5;\r\n}\r\n\r\n.description {\r\n  font-size: 1.2rem;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  margin-bottom: 40px;\r\n  max-width: 90%;\r\n  line-height: 1.6;\r\n}\r\n\r\n.buttonGroup {\r\n  margin-bottom: 48px;\r\n  gap: 16px;\r\n}\r\n\r\n.primaryButton {\r\n  position: relative;\r\n  border: none;\r\n  background: linear-gradient(90deg, #4055ff, #ff41b8);\r\n  padding: 0;\r\n  height: 54px;\r\n  border-radius: 27px;\r\n  overflow: hidden;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.buttonInner {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 0 24px;\r\n  z-index: 1;\r\n}\r\n\r\n.buttonGlow {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 120%;\r\n  height: 120%;\r\n  background: radial-gradient(circle, rgba(255, 255, 255, 0.8), transparent 70%);\r\n  opacity: 0;\r\n  transition: opacity 0.5s ease;\r\n}\r\n\r\n.primaryButton:hover .buttonGlow {\r\n  opacity: 0.1;\r\n  animation: pulseGlow 1.5s infinite;\r\n}\r\n\r\n@keyframes pulseGlow {\r\n  0% {\r\n    transform: translate(-50%, -50%) scale(0.8);\r\n    opacity: 0;\r\n  }\r\n  50% {\r\n    opacity: 0.1;\r\n  }\r\n  100% {\r\n    transform: translate(-50%, -50%) scale(1.2);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.buttonText {\r\n  position: relative;\r\n  z-index: 2;\r\n  font-weight: 600;\r\n  font-size: 1rem;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.secondaryButton {\r\n  height: 54px;\r\n  border-radius: 27px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  background: rgba(255, 255, 255, 0.05);\r\n  color: white;\r\n  font-weight: 500;\r\n  transition: all 0.3s ease;\r\n  backdrop-filter: blur(5px);\r\n}\r\n\r\n.secondaryButton:hover {\r\n  border-color: rgba(255, 255, 255, 0.3);\r\n  background: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.metricsContainer {\r\n  display: flex;\r\n  gap: 48px;\r\n}\r\n\r\n.metric {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.metricValue {\r\n  display: flex;\r\n  align-items: baseline;\r\n}\r\n\r\n.metricNumber {\r\n  font-size: 2.5rem;\r\n  font-weight: 800;\r\n  background: linear-gradient(90deg, #40dbff, #6840ff);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.metricUnit {\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  color: #40dbff;\r\n  margin-left: 2px;\r\n}\r\n\r\n.metricLabel {\r\n  color: rgba(255, 255, 255, 0.6);\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.rightColumn {\r\n  flex: 1;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.visualElement {\r\n  position: relative;\r\n  width: 500px;\r\n  height: 500px;\r\n}\r\n\r\n.hologramContainer {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.hologramCore {\r\n  position: relative;\r\n  width: 120px;\r\n  height: 120px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.coreInner {\r\n  width: 60px;\r\n  height: 60px;\r\n  background: linear-gradient(135deg, #40dbff, #ff41b8);\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 30px rgba(64, 219, 255, 0.8);\r\n  animation:\r\n    rotate 4s linear infinite,\r\n    pulse 2s ease-in-out infinite alternate;\r\n}\r\n\r\n.coreRing {\r\n  position: absolute;\r\n  width: 100px;\r\n  height: 100px;\r\n  border: 2px solid rgba(64, 219, 255, 0.7);\r\n  border-radius: 50%;\r\n  animation: rotate 10s linear infinite;\r\n}\r\n\r\n.corePulse {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px solid rgba(64, 219, 255, 0.5);\r\n  border-radius: 50%;\r\n  animation: expand 2s ease-in-out infinite;\r\n}\r\n\r\n@keyframes expand {\r\n  0% {\r\n    transform: scale(1);\r\n    opacity: 0.8;\r\n  }\r\n  100% {\r\n    transform: scale(1.5);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes rotate {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.orbitalRing1,\r\n.orbitalRing2 {\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  border: 1px dashed rgba(64, 219, 255, 0.3);\r\n}\r\n\r\n.orbitalRing1 {\r\n  width: 200px;\r\n  height: 200px;\r\n  animation: rotate 20s linear infinite;\r\n}\r\n\r\n.orbitalRing2 {\r\n  width: 300px;\r\n  height: 300px;\r\n  transform: rotateX(60deg) rotateY(30deg);\r\n  animation: rotate 30s linear infinite reverse;\r\n}\r\n\r\n.dataPoint1,\r\n.dataPoint2,\r\n.dataPoint3 {\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.dataPoint1 {\r\n  top: 30%;\r\n  right: 15%;\r\n}\r\n\r\n.dataPoint2 {\r\n  bottom: 30%;\r\n  right: 20%;\r\n}\r\n\r\n.dataPoint3 {\r\n  top: 45%;\r\n  left: 15%;\r\n}\r\n\r\n.dataPointDot {\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  background-color: #40dbff;\r\n  box-shadow: 0 0 10px rgba(64, 219, 255, 0.8);\r\n}\r\n\r\n.dataPointLabel {\r\n  font-size: 0.8rem;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  text-shadow: 0 0 5px rgba(64, 219, 255, 0.5);\r\n}\r\n\r\n.scanLines {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: repeating-linear-gradient(\r\n    0deg,\r\n    rgba(64, 219, 255, 0.05) 0px,\r\n    rgba(64, 219, 255, 0.05) 1px,\r\n    transparent 1px,\r\n    transparent 4px\r\n  );\r\n  opacity: 0.3;\r\n  pointer-events: none;\r\n}\r\n\r\n.blueprint {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0.1;\r\n  pointer-events: none;\r\n}\r\n\r\n.blueprintLines {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: radial-gradient(circle, rgba(64, 219, 255, 0.2) 1px, transparent 1px),\r\n    linear-gradient(rgba(64, 219, 255, 0.2) 1px, transparent 1px),\r\n    linear-gradient(90deg, rgba(64, 219, 255, 0.2) 1px, transparent 1px);\r\n  background-size:\r\n    20px 20px,\r\n    20px 20px,\r\n    20px 20px;\r\n}\r\n\r\n.blueprintCircle {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 250px;\r\n  height: 250px;\r\n  border: 1px solid rgba(64, 219, 255, 0.4);\r\n  border-radius: 50%;\r\n}\r\n\r\n.blueprintGrid {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: linear-gradient(rgba(64, 219, 255, 0.1) 1px, transparent 1px),\r\n    linear-gradient(90deg, rgba(64, 219, 255, 0.1) 1px, transparent 1px);\r\n  background-size: 10px 10px;\r\n}\r\n\r\n.dataStream {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n}\r\n\r\n.dataLine {\r\n  position: absolute;\r\n  height: 1px;\r\n  background: linear-gradient(90deg, transparent, rgba(64, 219, 255, 0.8), transparent);\r\n  animation: dataFlow 2s ease-in-out infinite;\r\n}\r\n\r\n@keyframes dataFlow {\r\n  0% {\r\n    transform: translateX(-100%);\r\n    opacity: 0;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    transform: translateX(100%);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.partnersSection {\r\n  margin-top: 80px;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n  padding-top: 40px;\r\n}\r\n\r\n.partnersTitle {\r\n  text-align: center;\r\n  color: rgba(255, 255, 255, 0.4);\r\n  font-size: 0.8rem;\r\n  font-weight: 600;\r\n  letter-spacing: 2px;\r\n  margin-bottom: 32px;\r\n}\r\n\r\n.partnersLogos {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.partnerLogo {\r\n  position: relative;\r\n  width: 100px;\r\n  height: 40px;\r\n  background-color: rgba(255, 255, 255, 0.05);\r\n  border-radius: 8px;\r\n}\r\n\r\n.glowBorder {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 15px rgba(64, 219, 255, 0.2);\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.partnerLogo:hover .glowBorder {\r\n  opacity: 1;\r\n}\r\n\r\n@media (max-width: 992px) {\r\n  .contentWrapper {\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n\r\n  .mainTitle {\r\n    font-size: 3rem;\r\n  }\r\n\r\n  .description {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n\r\n  .metricsContainer {\r\n    justify-content: center;\r\n  }\r\n\r\n  .buttonGroup {\r\n    justify-content: center;\r\n  }\r\n\r\n  .visualElement {\r\n    width: 400px;\r\n    height: 400px;\r\n    margin-top: 40px;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .heroContainer {\r\n    padding: 80px 0;\r\n  }\r\n\r\n  .mainTitle {\r\n    font-size: 2.5rem;\r\n  }\r\n\r\n  .description {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .metricsContainer {\r\n    flex-direction: column;\r\n    gap: 24px;\r\n    align-items: center;\r\n  }\r\n\r\n  .buttonGroup {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .visualElement {\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  .partnersLogos {\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n  }\r\n}\r\n"
      }
    ],
    "attributes": {
      "title": "hero3",
      "category": "hero",
      "canvas": {
        "center": true,
        "maxWidth": 1200
      },
      "order": 3
    }
  },
  {
    "component": "Pricing1",
    "slug": "pricing1",
    "code": [
      {
        "fileName": "pricing1.tsx",
        "language": "tsx",
        "code": "import { useState } from \"react\";\r\nimport { Box, Card, Grid, Title, Text, Button, Switch, Divider, Group, Stack, Container } from \"@mantine/core\";\r\nimport { CheckCircledIcon, ArrowRightIcon } from \"@radix-ui/react-icons\";\r\nimport classes from \"./pricing1.module.css\";\r\n\r\nexport const Pricing1 = () => {\r\n  const [isYearly, setIsYearly] = useState(false);\r\n\r\n  const plans = [\r\n    {\r\n      name: \"Plus\",\r\n      subtitle: \"For personal use\",\r\n      monthlyPrice: 19,\r\n      yearlyPrice: 15,\r\n      annualBilling: {\r\n        monthly: 228,\r\n        yearly: 180,\r\n      },\r\n      badgeVariant: \"outline\",\r\n      features: [\r\n        \"Unlimited basic features\",\r\n        \"Standard support\",\r\n        \"Basic analytics\",\r\n        \"Single user account\",\r\n        \"Lorem ipsum dolor sit.\",\r\n      ],\r\n    },\r\n    {\r\n      name: \"Pro\",\r\n      subtitle: \"For professionals\",\r\n      monthlyPrice: 49,\r\n      yearlyPrice: 35,\r\n      annualBilling: {\r\n        monthly: 588,\r\n        yearly: 420,\r\n      },\r\n      badgeVariant: \"filled\",\r\n      features: [\r\n        \"Everything in Plus\",\r\n        \"Priority support\",\r\n        \"Advanced analytics\",\r\n        \"Team collaboration\",\r\n        \"Custom integrations\",\r\n        \"Lorem ipsum dolor sit.\",\r\n      ],\r\n      recommended: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box className={classes.pricingWrapper}>\r\n      <Container size=\"xl\">\r\n        <Stack align=\"center\" gap=\"xl\">\r\n          <Stack align=\"center\" gap=\"xs\">\r\n            <Title order={1} fz={\"2.6rem\"} className={classes.mainTitle}>\r\n              Pricing Plans\r\n            </Title>\r\n            <Text className={classes.mainSubtitle} c=\"dimmed\">\r\n              Choose the perfect plan for your needs\r\n            </Text>\r\n          </Stack>\r\n\r\n          <Group align=\"center\" gap=\"md\">\r\n            <Text>Monthly</Text>\r\n            <Switch\r\n              size=\"lg\"\r\n              color=\"var(--mantine-primary-color-filled)\"\r\n              checked={isYearly}\r\n              onChange={() => setIsYearly(!isYearly)}\r\n              className={classes.billingSwitch}\r\n            />\r\n            <Text>Yearly</Text>\r\n          </Group>\r\n\r\n          <Grid gutter=\"xl\" w=\"90%\">\r\n            {plans.map((plan) => (\r\n              <Grid.Col key={plan.name} span={{ base: 12, lg: 6 }}>\r\n                <Card\r\n                  withBorder\r\n                  radius=\"lg\"\r\n                  className={`${classes.pricingCard} ${plan.recommended ? classes.recommendedCard : \"\"}`}\r\n                  style={{ overflow: \"visible\" }}\r\n                >\r\n                  <Stack gap=\"xl\" h={\"100%\"}>\r\n                    <Group justify=\"space-between\" align=\"start\">\r\n                      <Stack gap=\"xs\">\r\n                        <Title order={1} fw={600} className={classes.planTitle}>\r\n                          {plan.name}\r\n\r\n                          {plan.recommended && <Box className={classes.recommendedBadge}>Most Popular</Box>}\r\n                        </Title>\r\n                        <Text c=\"dimmed\" size=\"md\">\r\n                          {plan.subtitle}\r\n                        </Text>\r\n                      </Stack>\r\n                      <Stack align=\"end\" gap={4}>\r\n                        <Text fz={\"h1\"} fw={600} className={classes.price} lh={\"lg\"}>\r\n                          ${isYearly ? plan.yearlyPrice : plan.monthlyPrice}\r\n                        </Text>\r\n                        <Text c=\"dimmed\" size=\"sm\">\r\n                          Billed {isYearly ? \"yearly\" : \"monthly\"}\r\n                        </Text>\r\n                      </Stack>\r\n                    </Group>\r\n\r\n                    <Divider />\r\n\r\n                    <Stack gap=\"md\" mb={\"xs\"}>\r\n                      {plan.features.map((feature) => (\r\n                        <Group key={feature} gap=\"md\" align=\"center\">\r\n                          <CheckCircledIcon color=\"var(--mantine-primary-color-6)\" />\r\n                          <Text>{feature}</Text>\r\n                        </Group>\r\n                      ))}\r\n                    </Stack>\r\n\r\n                    <Button\r\n                      className=\"mt-auto\"\r\n                      size=\"lg\"\r\n                      variant={plan.badgeVariant}\r\n                      color={\"var(--mantine-primary-color-filled)\"}\r\n                      rightSection={<ArrowRightIcon />}\r\n                      fullWidth\r\n                      {...(plan.badgeVariant === \"filled\" ? { c: \"var(--mantine-primary-color-contrast)\" } : {})}\r\n                    >\r\n                      Get Started\r\n                    </Button>\r\n                  </Stack>\r\n                </Card>\r\n              </Grid.Col>\r\n            ))}\r\n          </Grid>\r\n        </Stack>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n"
      },
      {
        "fileName": "pricing1.module.css",
        "language": "scss",
        "code": ".pricingWrapper {\r\n  background-color: var(--mantine-body-color);\r\n  padding: 4rem 0;\r\n}\r\n\r\n.mainTitle {\r\n  font-size: 3rem;\r\n  font-weight: 900;\r\n  background: linear-gradient(180deg, var(--mantine-primary-color-filled), var(--mantine-primary-color-8));\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n\r\n.mainSubtitle {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.billingSwitch {\r\n  transform: scale(1.2);\r\n  margin: 0 1rem;\r\n}\r\n\r\n.pricingCard {\r\n  background-color: var(--mantine-body-color);\r\n  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.05);\r\n  transition: all 0.3s ease;\r\n  padding: 2rem;\r\n  position: relative;\r\n  height: 100%;\r\n}\r\n\r\n.pricingCard:hover {\r\n  transform: translateY(-10px);\r\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.recommendedCard {\r\n  border-color: var(--mantine-color-default-border);\r\n}\r\n\r\n.recommendedBadge {\r\n  position: absolute;\r\n  top: -12px;\r\n  right: 4px;\r\n  background-color: var(--mantine-primary-color-light);\r\n  color: var(--mantine-color-text);\r\n  padding: 0rem 0.6rem;\r\n  border-radius: 99px;\r\n  font-size: 0.6rem;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  z-index: 10;\r\n  letter-spacing: 2px;\r\n  line-height: rem(24px);\r\n\r\n  background: linear-gradient(45deg, var(--mantine-primary-color-filled), var(--mantine-primary-color-0));\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n\r\n.planTitle {\r\n  color: var(--mantine-primary-color-4);\r\n}\r\n\r\n.price {\r\n  background: linear-gradient(45deg, var(--mantine-primary-color-8), var(--mantine-primary-color-4));\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n"
      }
    ],
    "attributes": {
      "title": "pricing1",
      "category": "pricing",
      "canvas": {
        "center": true,
        "maxWidth": 1200
      },
      "order": 3
    }
  },
  {
    "component": "Hero4",
    "slug": "hero4",
    "code": [
      {
        "fileName": "hero4.tsx",
        "language": "tsx",
        "code": "\r\nimport { Container, Title, Text, Button, Group, Box } from \"@mantine/core\";\r\nimport styles from \"./hero4.module.css\";\r\n\r\nexport const Hero4 = () => {\r\n  return (\r\n    <Box className={styles.heroContainer}>\r\n      {/* Simple background */}\r\n      <div className={styles.gradientBackground}></div>\r\n\r\n      <Container size=\"xl\" className={styles.contentContainer}>\r\n        <div className={styles.contentWrapper}>\r\n          <div className={styles.centerColumn}>\r\n            <div className={styles.tagLine}>\r\n              <div className={styles.tag}>\r\n                <Text size=\"sm\" className={styles.tagText}>\r\n                  New Release\r\n                </Text>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles.getStartedText}>\r\n              <Text>Get started with our new product release today</Text>\r\n              <span className={styles.arrow}>→</span>\r\n            </div>\r\n\r\n            <Title className={styles.mainTitle}>\r\n              <span className={styles.titleLine}>Smart home automation</span>\r\n              <span className={styles.titleLine}>and security system for you</span>\r\n            </Title>\r\n\r\n            <Text className={styles.description}>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Quia possimus fugit ab cumque consequuntur\r\n              pariatur provident? Nulla consequuntur nisi eum!\r\n            </Text>\r\n\r\n            <Group className={styles.buttonGroup}>\r\n              <Button className={styles.primaryButton}>\r\n                <span className={styles.buttonText}>Get Started</span>\r\n                <span className={styles.buttonArrow}>→</span>\r\n              </Button>\r\n\r\n              <Button variant=\"outline\" className={styles.secondaryButton}>\r\n                <span className={styles.playIcon}>▶</span>\r\n                Watch Demo\r\n              </Button>\r\n\r\n              <div className={styles.scheduleCall}>\r\n                <Text>Schedule a call</Text>\r\n                <span className={styles.arrow}>→</span>\r\n              </div>\r\n            </Group>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.imageContainer}>\r\n          <div className={styles.logoImage}>{/* Add image here */}</div>\r\n        </div>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n"
      },
      {
        "fileName": "hero4.module.css",
        "language": "scss",
        "code": "/* smart-home-hero.module.css */\r\n.heroContainer {\r\n    position: relative;\r\n    min-height: 100vh;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    display: flex;\r\n    align-items: center;\r\n    color: #000;\r\n  }\r\n  \r\n  .gradientBackground {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n  }\r\n  \r\n  .contentContainer {\r\n    position: relative;\r\n    z-index: 10;\r\n    width: 100%;\r\n    padding-top: 60px;\r\n    padding-bottom: 60px;\r\n  }\r\n  \r\n  .contentWrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n  \r\n  .centerColumn {\r\n    max-width: 800px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  \r\n  .tagLine {\r\n    margin-bottom: 12px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .tag {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    padding: 5px 10px;\r\n    border-radius: 20px;\r\n    background: #000;\r\n    margin-bottom: 8px;\r\n  }\r\n  \r\n  .tagText {\r\n    color: white;\r\n    font-weight: 500;\r\n    font-size: 0.75rem;\r\n  }\r\n  \r\n  .getStartedText {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    margin-bottom: 20px;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .arrow {\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .mainTitle {\r\n    font-size: 2.5rem;\r\n    line-height: 1.2;\r\n    font-weight: 700;\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: #000;\r\n    text-align: center;\r\n  }\r\n  \r\n  .titleLine {\r\n    display: block;\r\n  }\r\n  \r\n  .description {\r\n    font-size: 1rem;\r\n    color: #555;\r\n    margin-bottom: 30px;\r\n    max-width: 600px;\r\n    line-height: 1.6;\r\n    text-align: center;\r\n  }\r\n  \r\n  .buttonGroup {\r\n    display: flex;\r\n    gap: 12px;\r\n    margin-bottom: 40px;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  \r\n  .primaryButton {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    background: #000;\r\n    color: white;\r\n    padding: 8px 20px;\r\n    border-radius: 5px;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .primaryButton:hover {\r\n    background: #333;\r\n  }\r\n  \r\n  .buttonText {\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .buttonArrow {\r\n    margin-left: 5px;\r\n  }\r\n  \r\n  .secondaryButton {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    background: transparent;\r\n    color: #000;\r\n    padding: 8px 20px;\r\n    border-radius: 5px;\r\n    border: 1px solid #ddd;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .secondaryButton:hover {\r\n    background: #f5f5f5;\r\n  }\r\n  \r\n  .playIcon {\r\n    font-size: 0.7rem;\r\n  }\r\n  \r\n  .scheduleCall {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    font-size: 0.9rem;\r\n    color: #000;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .imageContainer {\r\n    margin-top: 50px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  \r\n\r\n  \r\n  @media (max-width: 992px) {\r\n    .mainTitle {\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .buttonGroup {\r\n      flex-direction: column;\r\n      align-items: center;\r\n      gap: 15px;\r\n    }\r\n    \r\n    .mainTitle {\r\n      font-size: 1.8rem;\r\n    }\r\n  }"
      }
    ],
    "attributes": {
      "title": "hero4",
      "category": "hero",
      "canvas": {
        "center": true,
        "maxWidth": 1200
      },
      "order": 4
    }
  },
  {
    "component": "MeetOurTeam1",
    "slug": "meet-our-team1",
    "code": [
      {
        "fileName": "meet-our-team-1.tsx",
        "language": "tsx",
        "code": "import { Card, Avatar, Text, Group, Stack, Container, Title, SimpleGrid } from \"@mantine/core\";\r\nimport { LinkedInLogoIcon, TwitterLogoIcon, GitHubLogoIcon } from \"@radix-ui/react-icons\";\r\nimport classes from \"./meet-our-team-1.module.css\";\r\n\r\nconst teamMembers = [\r\n  {\r\n    name: \"Elena Rodriguez\",\r\n    role: \"Chief Executive Officer\",\r\n    bio: \"Visionary leader with 15 years of tech innovation experience.\",\r\n    image: \"https://cdn.jsdelivr.net/gh/alohe/avatars/png/upstream_22.png\",\r\n    socials: {\r\n      linkedin: \"#\",\r\n      twitter: \"#\",\r\n      github: \"#\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Marcus Chen\",\r\n    role: \"Chief Technology Officer\",\r\n    bio: \"Engineering maestro driving cutting-edge technological solutions.\",\r\n    image: \"https://cdn.jsdelivr.net/gh/alohe/avatars/png/upstream_17.png\",\r\n    socials: {\r\n      linkedin: \"#\",\r\n      twitter: \"#\",\r\n      github: \"#\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Aria Patel\",\r\n    role: \"Design Director\",\r\n    bio: \"Creative genius transforming complex ideas into elegant designs.\",\r\n    image: \"https://cdn.jsdelivr.net/gh/alohe/avatars/png/upstream_14.png\",\r\n    socials: {\r\n      linkedin: \"#\",\r\n      twitter: \"#\",\r\n      github: \"#\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Jackson Wright\",\r\n    role: \"Product Strategy Lead\",\r\n    bio: \"Strategic mastermind connecting user needs with business goals.\",\r\n    image: \"https://cdn.jsdelivr.net/gh/alohe/avatars/png/upstream_16.png\",\r\n    socials: {\r\n      linkedin: \"#\",\r\n      twitter: \"#\",\r\n      github: \"#\",\r\n    },\r\n  },\r\n];\r\n\r\ninterface IMember {\r\n  name: string;\r\n  role: string;\r\n  bio: string;\r\n  image: string;\r\n  socials: {\r\n    linkedin: string;\r\n    twitter: string;\r\n    github: string;\r\n  };\r\n}\r\n\r\nconst TeamMemberCard = ({ member }: { member: IMember }) => {\r\n  return (\r\n    <Card shadow=\"lg\" radius=\"md\" className={classes.teamMemberCard} padding=\"xl\">\r\n      <Stack align=\"center\" gap=\"md\">\r\n        <Avatar src={member.image} size={120} radius=\"50%\" className={classes.memberAvatar} />\r\n\r\n        <Stack align=\"center\" gap=\"xs\">\r\n          <Title order={3} className={classes.memberName}>\r\n            {member.name}\r\n          </Title>\r\n          <Text c=\"dimmed\" ta={\"center\"} className={classes.memberRole}>\r\n            {member.role}\r\n          </Text>\r\n        </Stack>\r\n\r\n        <Text\r\n          ta=\"center\"\r\n          c={\"light-dark(var(--mantine-color-dark-6), var(--mantine-color-dark-4)\"}\r\n          className={classes.memberBio}\r\n        >\r\n          {member.bio}\r\n        </Text>\r\n\r\n        <Group gap=\"md\" className={classes.socialIcons}>\r\n          <a href={member.socials.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <LinkedInLogoIcon width={24} height={24} />\r\n          </a>\r\n          <a href={member.socials.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <TwitterLogoIcon width={24} height={24} />\r\n          </a>\r\n          <a href={member.socials.github} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <GitHubLogoIcon width={24} height={24} />\r\n          </a>\r\n        </Group>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const MeetOurTeam1 = () => {\r\n  return (\r\n    <Container size=\"xl\" py=\"xl\">\r\n      <Stack align=\"center\" mb=\"xl\">\r\n        <Title order={1} className={classes.sectionTitle}>\r\n          Meet Our Extraordinary Team\r\n        </Title>\r\n        <Text c=\"dimmed\" ta=\"center\" maw={600}>\r\n          Behind every breakthrough is a passionate team of innovators, dedicated to pushing the boundaries of what's\r\n          possible.\r\n        </Text>\r\n      </Stack>\r\n\r\n      <SimpleGrid cols={{ base: 1, md: 2, lg: 4 }} spacing=\"xl\">\r\n        {teamMembers.map((member, index) => (\r\n          <TeamMemberCard key={index} member={member} />\r\n        ))}\r\n      </SimpleGrid>\r\n    </Container>\r\n  );\r\n};\r\n"
      },
      {
        "fileName": "meet-our-team-1.module.css",
        "language": "scss",
        "code": ".teamMemberCard {\r\n  transition: all 0.3s ease;\r\n  background: linear-gradient(145deg, var(--mantine-body-color), var(--mantine-color-gray-2));\r\n  border: 1px solid var(--mantine-color-default-border);\r\n}\r\n\r\n.teamMemberCard:hover {\r\n  transform: translateY(-10px);\r\n  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.memberAvatar {\r\n  border: 4px solid #fff;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.memberName {\r\n  color: var(--mantine-primary-color-5);\r\n  font-weight: 700;\r\n  letter-spacing: -0.5px;\r\n}\r\n\r\n.memberRole {\r\n  text-transform: uppercase;\r\n  font-size: 0.8rem;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.memberBio {\r\n  font-style: italic;\r\n  text-align: center;\r\n}\r\n\r\n.socialIcons svg {\r\n  color: light-dark(var(--mantine-primary-color-7), var(--mantine-primary-color-5));\r\n  opacity: 0.7;\r\n}\r\n\r\n.socialIcons a {\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.socialIcons a:hover svg {\r\n  opacity: 1;\r\n}\r\n\r\n.sectionTitle {\r\n  background: linear-gradient(180deg, var(--mantine-primary-color-filled), var(--mantine-primary-color-8));\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  font-weight: 900;\r\n  text-align: center;\r\n}\r\n"
      }
    ],
    "attributes": {
      "title": "meet-our-team-1",
      "category": "team",
      "canvas": {
        "center": true,
        "maxWidth": 1200
      },
      "order": 4
    }
  },
  {
    "component": "ComingSoon",
    "slug": "coming-soon",
    "code": [
      {
        "fileName": "coming-soon.tsx",
        "language": "tsx",
        "code": "import { Box, Container, Text, Group, Stack } from \"@mantine/core\";\r\nimport styles from \"./coming-soon.module.css\";\r\n\r\nexport const ComingSoon = () => {\r\n  return (\r\n    <Box>\r\n      <Container size=\"md\" className={styles.container}>\r\n        <Stack gap=\"xl\" align=\"center\">\r\n          <Group ta={\"center\"} justify=\"center\" gap={\"xl\"}>\r\n            <Text fz={\"4rem\"} fw={600} lh={\"4rem\"} className={styles.title} ta={\"center\"}>\r\n              Coming Soon..\r\n            </Text>\r\n            <Text c={\"dimmed\"} maw={\"380\"}>\r\n              We're working hard to bring you more awesome blocks. Stay tuned for updates!\r\n            </Text>\r\n          </Group>\r\n        </Stack>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n"
      },
      {
        "fileName": "coming-soon.module.css",
        "language": "scss",
        "code": ".container {\r\n  padding: 4rem 1rem;\r\n}\r\n\r\n.title {\r\n  background-image: linear-gradient(to right, #eea2a2 0%, #bbc1bf 19%, #57c6e1 42%, #b49fda 79%, #7ac5d8 100%);\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n"
      }
    ],
    "attributes": {
      "title": "coming-soon",
      "category": "coming-soon",
      "canvas": {
        "center": true,
        "maxWidth": 1200
      },
      "order": 5
    }
  }
];